[include dualcolor.cfg]
[include macros.cfg]
[include KAMP_Settings.cfg]
[display_status]
[include mainsail.cfg]
#[include probe.cfg]
[virtual_sdcard]
path: ~/printer_data/gcodes

[pause_resume]


#   A comma separated list of pins that may be used multiple times in
#   a config file without normal error checks. This parameter must be
#   provided.


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####

  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}



  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true

  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}



  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg

  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}



# Communication interface: "USB (on PA11/PA12)",
# Communication interface: "CAN bus (on PD0/PD1)", or
# Communication interface: "USB to CAN bus bridge (USB on PA11/PA12))" and CAN bus interface: "CAN bus (on PD0/PD1)".

# See do.

# Motor-1
[stepper_x]
step_pin: PE6
dir_pin: !PE5
enable_pin: !PC14
microsteps: 16
rotation_distance: 40
endstop_pin: ^PF4
position_endstop: -26
position_max: 300
position_min: -26
homing_speed: 150

# Motor-2
[stepper_y]
step_pin: PE2
dir_pin: !PE1
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: PF3
position_endstop: 0
position_max: 300
homing_speed: 150

# Motor-3
[stepper_z]
endstop_pin: probe:z_virtual_endstop
position_min: -5
#position_endstop: 0.5
position_max: 320
step_pin: PB8
dir_pin: PB7
enable_pin: !PE0
microsteps: 16
position_min: -5.0
homing_speed: 8
homing_retract_dist: 3
rotation_distance:8

## Motor4
# The M8P only has 4 heater outputs which leaves an extra stepper
# This can be used for a second Z stepper, dual_carriage, extruder co-stepper,
# or other accesory such as an MMU
[stepper_z1]
step_pin: PB4
dir_pin: PB3
enable_pin: !PB6
microsteps: 16
rotation_distance: 8
#endstop_pin: ^PF1
#...

# Motor5
[extruder]
step_pin: PG13
dir_pin: PG12
enable_pin: !PG15
microsteps: 16
rotation_distance: 8.500
nozzle_diameter: 0.4
filament_diameter: 1.75
heater_pin: PA0 # HE0
sensor_pin: PB0 # T0
sensor_type: Generic 3950
control: pid
pid_Kp: 22.2
pid_Ki: 1.08
pid_Kd: 114
min_temp: 0
max_temp: 300
max_extrude_only_distance: 500
max_extrude_cross_section: 50
pressure_advance: 0.025
pressure_advance_smooth_time: 0.03
## End-Stop 5
#[filament_switch_sensor material_0]
#switch_pin: PF0

## Motor6
[extruder_stepper BELTED_EXTRUDER]
extruder:
step_pin: PG9
dir_pin: PD7
enable_pin: !PG11 
microsteps: 16
rotation_distance: 8.500

#[filament_switch_sensor material_0]
#switch_pin: PF1

#[filament_switch_sensor material_1]
#switch_pin: PC15
## Motor7
#[extruder2]
#step_pin: PD4
#dir_pin: PD3
#enable_pin: !PD6
#heater_pin: PA3 # HE2
#sensor_pin: PC4 # T2
#...

## Motor8
#[extruder3]
#step_pin: PC7
#dir_pin: PC8
#enable_pin: !PD2
#heater_pin: PA5 # HE3
#sensor_pin: PA7 # T3
#...

[heater_bed]
heater_pin: PF5
sensor_pin: PB1 # TB  
sensor_type: ATC Semitec 104GT-2
control: watermark
min_temp: 0
max_temp: 100

#[fan_generic soc-fan]
#pin: host:gpio79  #CB1
#pin: host:gpio26  #CM4

# Fan0
[heater_fan fan0]
pin: PF7

## Fan1
[heater_fan fan1]
pin: PF9

## Fan2
[fan_generic Controller_Fan1]
pin: PF6

## Fan3
[heater_fan fan3]
pin: PF8

## Fan4
[heater_fan fan4]
pin: PA4


[fan_generic Controller_Fan]
pin: PA6
tachometer_pin: PC2
max_power: 0.75

[fan_generic Controller_Fan2]
pin: PA2
tachometer_pin: PC1
max_power: 1.0

[firmware_retraction]
retract_length: 0.4
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 20
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32h723xx_1A0027000C51313236343430-if00
#/dev/serial/by-id/usb-Klipper_stm32h723xx_190006000F51313236343430-if00

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 4000
max_z_velocity: 10
max_z_accel: 100

########################################
# TMC2209 configuration
########################################

#[tmc2209 stepper_x]
#uart_pin: PG14
#diag_pin: PF0
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 stepper_y]
#uart_pin: PG13
#diag_pin: PF2
#run_current: 0.800
#stealthchop_threshold: 999999

[tmc2209 stepper_z]
uart_pin: PB9
diag_pin: PF2
run_current: 0.550
stealthchop_threshold: 999999

[tmc2209 stepper_z1]
uart_pin: PB5
diag_pin: PF1
run_current: 0.650
stealthchop_threshold: 999999

[tmc2209 extruder]
uart_pin: PG14
run_current: 0.800
stealthchop_threshold: 999999

[tmc2209 extruder_stepper BELTED_EXTRUDER]
run_current: 0.800
stealthchop_threshold: 999999

########################################
# TMC2209 configuration
########################################

## Motor1
#[tmc2209 stepper_x]
#uart_pin: PC13
##diag_pin: PF4 
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor2
#[tmc2209 stepper_y]
#uart_pin: PE3
##diag_pin: PF3
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor3
[tmc2209 stepper_z]
uart_pin: PB9
diag_pin: PF2
run_current: 0.650
stealthchop_threshold: 999999
interpolate: true

## Motor4
[tmc2209 stepper_z1]
uart_pin: PB5
diag_pin: PF1
run_current: 0.650
stealthchop_threshold: 999999
interpolate: true

## Motor5
[tmc2209 extruder]
uart_pin: PG14
run_current: 0.800
stealthchop_threshold: 999999
interpolate: true

## Motor6
[tmc2209 extruder_stepper BELTED_EXTRUDER]
run_current: 0.800
stealthchop_threshold: 999999
uart_pin: PG10
interpolate: true

## Motor7
#[tmc2209 extruder2]
#uart_pin: PD5
#run_current: 0.800
#stealthchop_threshold: 999999

## Motor8
#[tmc2209 extruder3]
#uart_pin: PC6
#run_current: 0.800
#stealthchop_threshold: 999999

########################################
# TMC2130 configuration
########################################


## Motor1
[tmc5160 stepper_x]
cs_pin: PC13
spi_software_mosi_pin: PG6
spi_software_miso_pin: PG7
spi_software_sclk_pin: PG8
##diag1_pin: PF4
run_current: 0.800
#hold_currrent: 0.125
stealthchop_threshold: 999999
interpolate: true

## Motor2
[tmc5160 stepper_y]
cs_pin: PE3
spi_software_mosi_pin: PG6
spi_software_miso_pin: PG7
spi_software_sclk_pin: PG8
##diag1_pin: PF3
run_current: 0.800
#hold_current: 0.125
stealthchop_threshold: 999999
interpolate: true

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE7, EXP1_2=PG1,
    EXP1_3=PG0, EXP1_4=PF15,
    EXP1_5=PF14, EXP1_6=PF13,    # Slot in the socket on this side
    EXP1_7=PF12, EXP1_8=PF11,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PE13, EXP2_2=PE12,
    EXP2_3=PE15, EXP2_4=PE11,
    EXP2_5=PE10, EXP2_6=PE14,      # Slot in the socket on this side
    EXP2_7=PE8, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<NC>
    
# See the sample-lcd.cfg file for definitions of common LCD displays.

[bltouch]
sensor_pin: PD13
control_pin: PD12
pin_up_touch_mode_reports_triggered: True
probe_with_touch_mode: True
x_offset: -24                          # modify as needed for bltouch location
y_offset: -48                          # modify as needed for bltouch location
z_offset: 0.0                         # modify as needed for bltouch or run PROBE_CALIBRATE
speed: 75
sample_retract_dist: 5.0                  # Can be set lower, example 2.5 depending on height of bltouch from bed
lift_speed: 50
samples: 2
stow_on_each_sample: False                       # Keep the probe extended between points
samples_tolerance: 0.0115                       # If those measurements aren't this close then
samples_tolerance_retries: 5                   # Re-probe this many times and use the average
#
####


[safe_z_home]
home_xy_position: 150, 150
speed: 150
z_hop: 10
z_hop_speed: 10

[bed_mesh]
speed: 150
horizontal_move_z: 3
mesh_min: 20, 60
mesh_max: 270, 250
probe_count: 6, 6        #JUST LIKE MYSELF THIS IS PROBABLY EXCESSIVE BUT HEY IT WORKS 
algorithm: bicubic
move_check_distance: 5
split_delta_z: .025
mesh_pps: 2,2
adaptive_margin: 5

[z_tilt]
z_positions:
  60,175
  260,175
points:
  275,175
  40,175
speed: 300
horizontal_move_z: 3
retries: 20
retry_tolerance: 0.001

[screws_tilt_adjust]
screw1: 64, 51
screw1_name: front left screw
screw2: 300, 50
screw2_name: front right screw
screw3: 300, 290
screw3_name: rear right screw
screw4: 65, 290
screw4_name: rear left screw
horizontal_move_z: 10
speed: 200
screw_thread: CW-M4 # Use CW for Clockwise

# Proximity switch
#[probe]
#pin: PF11

[output_pin ps_on_pin]
pin: PD14
value: 1
shutdown_value: 0

[gcode_macro POWER_ON]
    # description: Turn on the printer via the relay
gcode: 
    SET_PIN PIN=PS_ON_OFF VALUE=1

    # set shut down nozzle temperature
    TEMPERATURE_WAIT sensor=heater_extruder maximum=60

    # shut down the printer
    SET_PIN PIN=PS_ON_OFF VALUE=0  
